import 'package:flutter/material.dart';
import './style.dart' as style;
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:flutter/rendering.dart';

void main() {
  runApp( MaterialApp(
      theme: style.allstyle,

      home: MyApp()
  )
  );
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});
  @override
  State<MyApp> createState() => _MyAppState();
}


class _MyAppState extends State<MyApp> {

  getData() async {
    var result = await http.get( Uri.parse('https://codingapple1.github.io/app/data.json') );
    var result2 = jsonDecode(result.body);

    setState(() {
      data = result2;
      isLoading = true; // 로딩 완료 후 상태 변경
      print(data);
    });
  }

  var isLoading = false;
  var data = [];
  var tab = 0;
  addData(a) {
    setState(() {
      data.add(a);
    });
  }

    @override
  void initState() {
    // TODO: implement initState
    super.initState();
    getData();
  }


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Instagram'),
        actions: [Container(child: Icon(Icons.add_box_outlined, color: Colors.black,size: 30), 	margin: EdgeInsets.all(20),)],
      ),
      body: [HomeWidget(data: data, addData: addData), Text('장소 추천'), Text('장소 등록'), Text('게시판'), Text('설정')][tab],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: tab,
        iconSize: 27,
        backgroundColor: Colors.white,
        type: BottomNavigationBarType.fixed,
        selectedItemColor: Colors.black,
        unselectedItemColor: Colors.black54,
        showSelectedLabels: false,
        showUnselectedLabels: false,

        // 아이콜 아래의 글자 사이즈
        // selectedFontSize: 30,
        // unselectedFontSize: 30,
        onTap: (i){
          setState(() {
            tab = i;
          });
        },
        items: [
          BottomNavigationBarItem(
            label: '찜한 장소',
            icon: Icon(Icons.favorite),
            backgroundColor: Colors.white,
          ),
          BottomNavigationBarItem(
            label: '장소 추천',
            icon: Icon(Icons.location_on, ),
            backgroundColor: Colors.white,
          ),
          BottomNavigationBarItem(
            label: '장소 등록',
            icon: Icon(Icons.add_box_outlined),
            backgroundColor: Colors.white,
          ),
          BottomNavigationBarItem(
            label: '게시판',
            icon: Icon(Icons.library_books),
            backgroundColor: Colors.white,
          ),
          BottomNavigationBarItem(
            label: '설정',
            icon: Icon(Icons.settings),
            backgroundColor: Colors.white,
          ),
        ],
      ),
    );
  }
}




// 홈 화면 예시. 커스텀 위젯
class HomeWidget extends StatefulWidget {
  HomeWidget({super.key, this.data, this.addData});
  final data;
  final addData;
  @override
  State<HomeWidget> createState() => _HomeWidgetState();
}

class _HomeWidgetState extends State<HomeWidget> {
  final postList = [Colors.amber, Colors.lightBlue, Colors.redAccent,];

  getAddData() async {
    var result = await http.get(Uri.parse('https://codingapple1.github.io/app/more1.json'));
    var result2 = jsonDecode(result.body);
    widget.addData(result2);
  }
  getAdd2Data() async {
    var result = await http.get(Uri.parse('https://codingapple1.github.io/app/more2.json'));
    var result2 = jsonDecode(result.body);
    widget.addData(result2);
  }
  var get_num = 0;
  // 스크롤 바
  var scroll = ScrollController();
  @override
  void initState() {
    super.initState();
    scroll.addListener(() {
      if ((scroll.position.pixels == scroll.position.maxScrollExtent) &(get_num == 0)) {
        print('다 내려감');
        getAddData();
        get_num += 1;
      } else if ((scroll.position.pixels == scroll.position.maxScrollExtent) &(get_num == 1)) {
        print('2 번째로 내려감.');
        getAdd2Data();
        get_num += 1;
      } 
    });
  }

  @override
  Widget build(BuildContext context) {
    if (widget.data.isNotEmpty) {
      return Scaffold(
        appBar: AppBar(
          title: Text('장소 추천'),
        ),
        body: Center(
          child: ListView.builder(
              itemCount: widget.data.length,
              controller: scroll,
              itemBuilder: (BuildContext ctx, int idx) {
                return Column(
                  children: [
                    Image.network(widget.data[idx]['image']),
                    Text(widget.data[idx]['content']),
                    Text(widget.data[idx]['date']),
                    Text(widget.data[idx]['user']),
                    // Text(data[idx]['liked']),
                  ],
                );
              }
          ),
        ),
      );
    }
    else {
      return Center(child: CircularProgressIndicator());
    }
  }
}
